variablei <- variables[[i]]
p <- plotly::add_pie(p, data = variablei, labels = ~Var1, values = ~Freq, hole = 0.4,
title = colnames(data)[i], domain = list(row = 1, column = i))
}
p <- plotly::layout(p, title = "", showlegend = F,
grid=list(rows=1, columns=ncol(data)),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F))
p
p <- plotly::plot_ly(textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'))
for (i in 1:ncol(data)) {
variablei <- variables[[i]]
p <- plotly::add_pie(p, data = variablei, labels = ~Var1, values = ~Freq, hole = 0.4,
title = colnames(data)[i], domain = list(row = 0, column = i-1))
}
p <- plotly::layout(p, title = "", showlegend = F,
grid=list(rows=1, columns=ncol(data)),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F))
p
data <- Data %>% select(GrupoClientes, DeltaFrec, GrupoProporcion, GrupoPropMonto)
data2 <- as.data.frame(data)
variables <- list()
for (i in 1:ncol(data)) {
variables[[i]] <- data.frame(table(data2[, i]))
}
p <- plotly::plot_ly(textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'))
for (i in 1:ncol(data)) {
variablei <- variables[[i]]
p <- plotly::add_pie(p, data = variablei, labels = ~Var1, values = ~Freq, hole = 0.4,
title = colnames(data)[i], domain = list(row = 0, column = i-1))
}
p <- plotly::layout(p, title = "", showlegend = F,
grid=list(rows=1, columns=ncol(data)),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F))
p
data <- Data %>% select(GrupoClientes, DeltaFrec)
data <- Data %>% select(GrupoClientes, DeltaFrec)
tortas(data)
tortas <- function(data){
data2 <- as.data.frame(data)
variables <- list()
for (i in 1:ncol(data)) {
variables[[i]] <- data.frame(table(data2[, i]))
}
p <- plotly::plot_ly(textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'))
for (i in 1:ncol(data)) {
variablei <- variables[[i]]
p <- plotly::add_pie(p, data = variablei, labels = ~Var1, values = ~Freq, hole = 0.4,
title = colnames(data)[i], domain = list(row = 0, column = i-1))
}
p <- plotly::layout(p, title = "", showlegend = F,
grid=list(rows=1, columns=ncol(data)),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F))
p
}
tortas(data)
data <- Data %>% select(GrupoClientes, DeltaFrec, GrupoProporcion, GrupoPropMonto)
tortas(data)
data <- Data %>% select(GrupoClientes, DeltaFrec, GrupoProporcion)
tortas(data)
tortas <- function(data){
data2 <- as.data.frame(data)
variables <- list()
for (i in 1:ncol(data)) {
variables[[i]] <- data.frame(table(data2[, i]))
}
p <- plotly::plot_ly(textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'))
for (i in 1:ncol(data)) {
variablei <- variables[[i]]
p <- plotly::add_pie(p, data = variablei, labels = ~Var1, values = ~Freq, hole = 0.4,
title = colnames(data)[i], domain = list(row = 0, column = i-1))
}
p <- plotly::layout(p, title = "", showlegend = F,
grid=list(rows=2, columns=ncol(data)/2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F))
p
}
data <- Data %>% select(GrupoClientes, DeltaFrec, GrupoProporcion)
tortas(data)
tortas <- function(data){
data2 <- as.data.frame(data)
variables <- list()
for (i in 1:ncol(data)) {
variables[[i]] <- data.frame(table(data2[, i]))
}
p <- plotly::plot_ly(textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'))
for (i in 1:ncol(data)) {
variablei <- variables[[i]]
p <- plotly::add_pie(p, data = variablei, labels = ~Var1, values = ~Freq, hole = 0.4,
title = colnames(data)[i], domain = list(row = 0, column = i-1))
}
p <- plotly::layout(p, title = "", showlegend = F,
grid=list(rows = 1, columns = ncol(data)),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F))
p
}
data <- Data %>% select(GrupoClientes, DeltaFrec, GrupoProporcion)
tortas(data)
iris
View(iris)
burbujas <- function(data, x, y, size, color, title){
data2 <- as.data.frame(data)
nam_var <- colnames(data)
texto_vari <- c()
data$col_textoc <- NA
for (i in 1:nrow(data)) {
for (j in 1:length(nam_var)) {
texto_vari[j] <- paste0(nam_var[j], ': ', data2[i,j])
}
texto_vari <- paste(texto_vari, collapse = '</br>')
data$col_textoc[i] <- texto_vari
}
plotly::plot_ly(data,
x = ~x,
y = ~y,
size = ~size,
color = ~color,
text = ~col_textoc,
type = 'scatter',
mode = 'markers'
) %>%
plotly::layout(
title = title,
xaxis = list(range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
yaxis = list(range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
autosize = T
#, shapes = lineas
)
}
burbujas(data = iris, x = iris$Sepal.Length, y = iris$Petal.Length, size = iris$Sepal.Width,
color = iris$Species, title = 'Iris')
burbujas <- function(data, x, y, size, color, title){
data2 <- as.data.frame(data)
nam_var <- colnames(data)
texto_vari <- c()
data$col_textoc <- NA
for (i in 1:nrow(data)) {
for (j in 1:length(nam_var)) {
texto_vari[j] <- paste0(nam_var[j], ': ', data2[i,j])
}
texto_vari <- paste(texto_vari, collapse = '</br>')
data$col_textoc[i] <- texto_vari
}
plotly::plot_ly(data,
x = ~x,
y = ~y,
size = ~size,
color = ~color,
text = ~col_textoc,
type = 'scatter',
mode = 'markers'
) %>%
plotly::layout(
title = title,
xaxis = list('asdf', range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
yaxis = list('fdafdsa', range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
autosize = T
#, shapes = lineas
)
}
burbujas(data = iris, x = iris$Sepal.Length, y = iris$Petal.Length, size = iris$Sepal.Width,
color = iris$Species, title = 'Iris')
burbujas <- function(data, x, y, size, color, title){
data2 <- as.data.frame(data)
nam_var <- colnames(data)
texto_vari <- c()
data$col_textoc <- NA
for (i in 1:nrow(data)) {
for (j in 1:length(nam_var)) {
texto_vari[j] <- paste0(nam_var[j], ': ', data2[i,j])
}
texto_vari <- paste(texto_vari, collapse = '</br>')
data$col_textoc[i] <- texto_vari
}
plotly::plot_ly(data,
x = ~x,
y = ~y,
size = ~size,
color = ~color,
text = ~col_textoc,
type = 'scatter',
mode = 'markers'
) %>%
plotly::layout(
title = title,
xaxis = list(title = 'asdf', range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
yaxis = list(title = 'fdafdsa', range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
autosize = T
#, shapes = lineas
)
}
burbujas(data = iris, x = iris$Sepal.Length, y = iris$Petal.Length, size = iris$Sepal.Width,
color = iris$Species, title = 'Iris')
burbujas <- function(data, x, y, size, color, title){
data2 <- as.data.frame(data)
nam_var <- colnames(data)
texto_vari <- c()
data$col_textoc <- NA
for (i in 1:nrow(data)) {
for (j in 1:length(nam_var)) {
texto_vari[j] <- paste0(nam_var[j], ': ', data2[i,j])
}
texto_vari <- paste(texto_vari, collapse = '</br>')
data$col_textoc[i] <- texto_vari
}
plotly::plot_ly(data,
x = ~x,
y = ~y,
size = ~size,
color = ~color,
text = ~col_textoc,
type = 'scatter',
mode = 'markers'
) %>%
plotly::layout(
title = title,
xaxis = list(title = x, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
yaxis = list(title = y, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
autosize = T
#, shapes = lineas
)
}
burbujas(data = iris, x = iris$Sepal.Length, y = iris$Petal.Length, size = iris$Sepal.Width,
color = iris$Species, title = 'Iris')
names(data$GrupoClientes)
burbujas <- function(data, x, y, size, color, title, xlabel, ylabel){
data2 <- as.data.frame(data)
nam_var <- colnames(data)
texto_vari <- c()
data$col_textoc <- NA
for (i in 1:nrow(data)) {
for (j in 1:length(nam_var)) {
texto_vari[j] <- paste0(nam_var[j], ': ', data2[i,j])
}
texto_vari <- paste(texto_vari, collapse = '</br>')
data$col_textoc[i] <- texto_vari
}
plotly::plot_ly(data,
x = ~x,
y = ~y,
size = ~size,
color = ~color,
text = ~col_textoc,
type = 'scatter',
mode = 'markers'
) %>%
plotly::layout(
title = title,
xaxis = list(title = xlabel, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
yaxis = list(title = ylabel, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
autosize = T
#, shapes = lineas
)
}
burbujas(data = iris, x = iris$Sepal.Length, y = iris$Petal.Length, size = iris$Sepal.Width,
color = iris$Species, title = 'Iris', xlabel = 'Sepal Length', ylabel = 'Petal Length')
View(casrs)
View(cars)
View(iris3)
View(cars)
View(ability.cov)
View(ability.cov$cov)
View(airmiles)
View(AirPassengers)
View(sunspots)
library(bootcluster)
install.packages('bootcluster')
install.packages('bootcluster')
install.packages('bootcluster')
rep('Categoria1', times = runif(1)*100)
rep('Categoria1', times = runif(1)*100),
rep('Categoria2', times = runif(1)*100),
rep('Categoria3', times = runif(1)*100)
rep('Categoria1', times = runif(1)*100)
c(rep('Categoria1', times = runif(1)*100),
rep('Categoria2', times = runif(1)*100),
rep('Categoria3', times = runif(1)*100))
data_example <- data.frame(x = c(rep('Categoria1', times = runif(1)*100),
rep('Categoria2', times = runif(1)*100),
rep('Categoria3', times = runif(1)*100)),
y = c(rep('Categoria1', times = runif(1)*100),
rep('Categoria2', times = runif(1)*100),
rep('Categoria3', times = runif(1)*100)),
z = c(rep('Categoria1', times = runif(1)*100),
rep('Categoria2', times = runif(1)*100),
rep('Categoria3', times = runif(1)*100)))
x = c(rep('Categoria1', times = runif(1)*100),
rep('Categoria2', times = runif(1)*100),
rep('Categoria3', times = runif(1)*100))
data_example <- data.frame(x = c(rep('Categoria1', times = runif(1)*100),
rep('Categoria2', times = runif(1)*100),
rep('Categoria3', times = runif(1)*100)),
y = c(rep('Categoria1', times = runif(1)*100),
rep('Categoria2', times = runif(1)*100),
rep('Categoria3', times = runif(1)*100)),
z = c(rep('Categoria1', times = runif(1)*100),
rep('Categoria2', times = runif(1)*100),
rep('Categoria3', times = runif(1)*100)))
View(HairEyeColor)
tortas(HairEyeColor[, 1:3])
tortas <- function(data){
data2 <- as.data.frame(data)
variables <- list()
for (i in 1:ncol(data)) {
variables[[i]] <- data.frame(table(data2[, i]))
}
p <- plotly::plot_ly(textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'))
for (i in 1:ncol(data)) {
variablei <- variables[[i]]
p <- plotly::add_pie(p, data = variablei, labels = ~Var1, values = ~Freq, hole = 0.4,
title = colnames(data)[i], domain = list(row = 0, column = i-1))
}
p <- plotly::layout(p, title = "", showlegend = F,
grid=list(rows = 1, columns = ncol(data)),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F))
p
}
library(RODBC)
library(data.table)
dsn= "TERADATAPDN"; uid = "ecano"; pwd = 'Kxh3Ax8xQ7AGZpNe'
ch <- odbcConnect(dsn= dsn, uid = uid, pwd = pwd)
Data <- as.data.table(sqlQuery(ch, "
select*from bd_adb_work.tmpSustitucion2020
where MinMes = 201903
order by PartyID"))
View(Data)
#GRÃFICO #######################################################
#library(gapminder)
#library(googleVis)
library(dplyr)
library(plotly)
#Sys.setenv("plotly_username"="elicano100")
#Sys.setenv("plotly_api_key"="JXwdw0wmPnxWH38Ab8iy")
# linea <- function(x, a=1, b=0){
#
#   y <- a * x + b
#
#   return(y)
#
# }
Data1 <- Data[GrupoPropMonto %in% c(1,2,3,4,5) &
GrupoClientes == "Arrastre" &
MinMes == 201903
]
tortas <- function(data){
data2 <- as.data.frame(data)
variables <- list()
for (i in 1:ncol(data)) {
variables[[i]] <- data.frame(table(data2[, i]))
}
p <- plotly::plot_ly(textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'))
for (i in 1:ncol(data)) {
variablei <- variables[[i]]
p <- plotly::add_pie(p, data = variablei, labels = ~Var1, values = ~Freq, hole = 0.4,
title = colnames(data)[i], domain = list(row = 0, column = i-1))
}
p <- plotly::layout(p, title = "", showlegend = F,
grid=list(rows = 1, columns = ncol(data)),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = F))
p
}
tortas(HairEyeColor[, 1:3])
str(HairEyeColor)
tortas(data.frame(HairEyeColor[, 1:3]))
data.frame(HairEyeColor[, 1:3])
1:3
tortas(HairEyeColor)
View(HairEyeColor)
colnames(HairEyeColor)
tortas(data.frame(HairEyeColor))
tortas(data.frame(HairEyeColor)[, 1])
tortas(data.frame(HairEyeColor)[, c(1,2)])
tortas(data.frame(HairEyeColor)[, c(1, 2, 3)])
burbujas <- function(data, x, y, size, color, title, xlabel, ylabel){
data2 <- as.data.frame(data)
nam_var <- colnames(data)
texto_vari <- c()
data$col_textoc <- NA
for (i in 1:nrow(data)) {
for (j in 1:length(nam_var)) {
texto_vari[j] <- paste0(nam_var[j], ': ', data2[i,j])
}
texto_vari <- paste(texto_vari, collapse = '</br>')
data$col_textoc[i] <- texto_vari
}
p <- plotly::plot_ly(data,
x = ~x,
y = ~y,
size = ~size,
color = ~color,
text = ~col_textoc,
type = 'scatter',
mode = 'markers'
)
p <- plotly::layout(
title = title,
xaxis = list(title = xlabel, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
yaxis = list(title = ylabel, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
autosize = T
#, shapes = lineas
)
p
}
burbujas(data = Data1 %>% select(-PropMonto), x = Data1$MontoAntes, y = Data1$MontoDespues, size = Data1$GrupoPropMonto,
color = Data1$DeltaFrec, variables_text = 'asdf', title = 'Clientes Rappi')
burbujas(data = Data1 %>% select(-PropMonto), x = Data1$MontoAntes, y = Data1$MontoDespues, size = Data1$GrupoPropMonto,
color = Data1$DeltaFrec, title = 'Clientes Rappi', xlabel = 'x', ylabel ='y')
burbujas <- function(data, x, y, size, color, title, xlabel, ylabel){
data2 <- as.data.frame(data)
nam_var <- colnames(data)
texto_vari <- c()
data$col_textoc <- NA
for (i in 1:nrow(data)) {
for (j in 1:length(nam_var)) {
texto_vari[j] <- paste0(nam_var[j], ': ', data2[i,j])
}
texto_vari <- paste(texto_vari, collapse = '</br>')
data$col_textoc[i] <- texto_vari
}
p <- plotly::plot_ly(data,
x = ~x,
y = ~y,
size = ~size,
color = ~color,
text = ~col_textoc,
type = 'scatter',
mode = 'markers'
)
p <- plotly::layout(
title = title,
xaxis = list(title = xlabel, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
yaxis = list(title = ylabel, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
autosize = T
#, shapes = lineas
)
p
}
burbujas(data = iris, x = iris$Sepal.Length, y = iris$Petal.Length, size = iris$Sepal.Width,
color = iris$Species, title = 'Iris', xlabel = 'Sepal Length', ylabel = 'Petal Length')
burbujas <- function(data, x, y, size, color, title, xlabel, ylabel){
data2 <- as.data.frame(data)
nam_var <- colnames(data)
texto_vari <- c()
data$col_textoc <- NA
for (i in 1:nrow(data)) {
for (j in 1:length(nam_var)) {
texto_vari[j] <- paste0(nam_var[j], ': ', data2[i,j])
}
texto_vari <- paste(texto_vari, collapse = '</br>')
data$col_textoc[i] <- texto_vari
}
p <- plotly::plot_ly(data,
x = ~x,
y = ~y,
size = ~size,
color = ~color,
text = ~col_textoc,
type = 'scatter',
mode = 'markers'
)
p <- plotly::layout(p,
title = title,
xaxis = list(title = xlabel, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
yaxis = list(title = ylabel, range = c(0, max(x, y)),
scaleratio = mean(c(x, y))/5000),
autosize = T
#, shapes = lineas
)
p
}
burbujas(data = iris, x = iris$Sepal.Length, y = iris$Petal.Length, size = iris$Sepal.Width,
color = iris$Species, title = 'Iris', xlabel = 'Sepal Length', ylabel = 'Petal Length')
burbujas(data = Data1 %>% select(-PropMonto), x = Data1$MontoAntes, y = Data1$MontoDespues, size = Data1$GrupoPropMonto,
color = Data1$DeltaFrec, title = 'Clientes Rappi', xlabel = 'x', ylabel ='y')
library(sustitucion1)
devtools::build( "C:/Users/fpino/Documents/OneDrive - Grupo-exito.com/pc/Documentos/sustitucion" )
